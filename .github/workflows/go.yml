# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Nécessaire pour accéder à tous les tags
          
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        check-latest: true

    - name: Build for Windows
      run: |
        cd src
        GOOS=windows GOARCH=amd64 go build -o ../go-pownMyHash_Win64.exe -v ./...

    - name: Build for Unix/Linux
      run: |
        cd src
        GOOS=linux GOARCH=amd64 go build -o ../go-pownMyHash_Unix64.bin -v ./...

    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: go-pownMyHash_Win64
        path: go-pownMyHash_Win64.exe
        retention-days: 7

    - name: Upload Unix/Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: go-pownMyHash_Unix64
        path: go-pownMyHash_Unix64.bin
        retention-days: 7

    - name: Auto Tag
      uses: butlerlogic/action-autotag@1.0.0
      id: autotag
      with:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        dry_run: false
          
    # Créer une release uniquement si un tag est poussé
    - name: Create Release
      id: create_release
      if: steps.autotag.outputs.tagcreated == 'yes'
      uses: softprops/action-gh-release@v1
      with:
        files: |
          go-pownmyhash_Win64.exe
          go-pownmyhash_Unix64.bin
        tag_name: ${{ steps.autotag.outputs.tagname }}
        name: Release ${{ steps.autotag.outputs.tagname }}
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
