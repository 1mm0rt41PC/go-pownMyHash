# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Nécessaire pour accéder à tous les tags
         
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24'
        check-latest: true

    - name: Build for Windows
      run: |
        cd src
        GOOS=windows GOARCH=amd64 go build -o ../go-pownMyHash_Win64.exe -v ./...

    - name: Build for Unix/Linux
      run: |
        cd src
        GOOS=linux GOARCH=amd64 go build -o ../go-pownMyHash_Unix64.bin -v ./...

    - name: Upload Windows executable
      uses: actions/upload-artifact@v4
      with:
        name: go-pownMyHash_Win64
        path: go-pownMyHash_Win64.exe
        retention-days: 7

    - name: Upload Unix/Linux executable
      uses: actions/upload-artifact@v4
      with:
        name: go-pownMyHash_Unix64
        path: go-pownMyHash_Unix64.bin
        retention-days: 7

    - name: Create tag
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v${{ github.run_number }}" -m "Release v${{ github.run_number }}"
        git push origin "v${{ github.run_number }}"

    # Créer une release uniquement si un tag est poussé
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: 'v${{ github.run_number }}'
        release_name: 'Release v${{ github.run_number }}'
        body: 'Description of the changes in this release'
        files: |
          go-pownmyhash_Win64.exe
          go-pownmyhash_Unix64.bin
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload windows artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: src/go-pownmyhash_Win64.exe
        asset_name: go-pownmyhash_Win64.exe
        asset_content_type: application/vnd.microsoft.portable-executable
